# InfraForge GitOps Platform Configuration
# Single source of truth for all applications and infrastructure

# Global settings
domain: "ticarethanem.net"
environment: "production"

aws:
  region: "eu-west-1"
  account_id: "715841344657"
  # Certificate ARN will be output from OpenTofu after first apply
  # Update this after initial tofu apply
  acm_certificate_arn: ""  # Will be populated by tofu output

# Infrastructure Components (Enable/Disable)
infrastructure:
  # ============================================================================
  # AWS Managed Databases
  # ============================================================================
  rds:
    mysql:
      enabled: true  # External RDS MySQL
      engine_version: "8.0.35"
      instance_class: "db.t3.micro"
      allocated_storage: 20
      multi_az: false
      backup_retention_days: 7
    postgresql:
      enabled: true  # External RDS PostgreSQL
      engine_version: "15.4"
      instance_class: "db.t3.micro"
      allocated_storage: 20
      multi_az: false
      backup_retention_days: 7

  # ============================================================================
  # AWS Managed Services (External)
  # ============================================================================
  elasticache:
    enabled: false  # Redis/Memcached managed by AWS
    engine: "redis"
    node_type: "cache.t3.micro"
    num_cache_nodes: 1
    engine_version: "7.0"
    parameter_group_family: "redis7"

  amazon_mq:
    enabled: false  # Managed RabbitMQ/ActiveMQ
    engine_type: "RabbitMQ"
    engine_version: "3.11.20"
    host_instance_type: "mq.t3.micro"
    deployment_mode: "SINGLE_INSTANCE"

  msk:
    enabled: false  # Managed Kafka
    kafka_version: "3.5.1"
    instance_type: "kafka.t3.small"
    number_of_broker_nodes: 3
    ebs_volume_size: 100

  sqs:
    enabled: false  # SQS queues
    create_dlq: true  # Create Dead Letter Queues

  # ============================================================================
  # Container Registry
  # ============================================================================
  ecr:
    enabled: true
    create_for_disabled_apps: true

  # ============================================================================
  # DNS & Certificates
  # ============================================================================
  route53:
    enabled: true
  acm:
    enabled: true

  # ============================================================================
  # Secrets Management
  # ============================================================================
  external_secrets:
    enabled: true  # External Secrets Operator
    secrets_manager:
      enabled: true  # Use AWS Secrets Manager
      region: "eu-west-1"

  # ============================================================================
  # Monitoring Stack
  # ============================================================================
  monitoring:
    prometheus:
      enabled: true
      retention: "15d"
      storage_size: "50Gi"
      replicas: 2
    grafana:
      enabled: true
      admin_password: ""  # Auto-generated by Terraform (random_password)
      persistence_enabled: true
      storage_size: "10Gi"
    alertmanager:
      enabled: true
      replicas: 2

  # ============================================================================
  # Logging & Tracing Stack
  # ============================================================================
  logging:
    loki:
      enabled: true
      retention_days: 30
      storage_size: "100Gi"
    opentelemetry:
      enabled: true  # OpenTelemetry Collector
      traces_enabled: true
      logs_enabled: true
      metrics_enabled: true

  # ============================================================================
  # Backup & Disaster Recovery
  # ============================================================================
  backup:
    velero:
      enabled: true
      s3_bucket: "infraforge-velero-backups"
      backup_schedule: "0 2 * * *"  # Daily at 2 AM
      retention_days: 30

  # ============================================================================
  # Internal Operators (Running in EKS)
  # ============================================================================
  internal_operators:
    cloudnative_pg:
      enabled: false  # PostgreSQL Operator
      default_instances: 3
      storage_size: "10Gi"
    redis_operator:
      enabled: false  # Redis Operator
      default_replicas: 3
      storage_size: "5Gi"
    rabbitmq_operator:
      enabled: false  # RabbitMQ Cluster Operator
      default_replicas: 3
      storage_size: "10Gi"
    mongodb_operator:
      enabled: false  # MongoDB Community Operator
      default_replicas: 3
      storage_size: "10Gi"
    strimzi_kafka:
      enabled: false  # Kafka Operator (Strimzi)
      default_replicas: 3
      storage_size: "50Gi"
      zookeeper_replicas: 3

# Applications
applications:
  smk:
    enabled: true
    namespace: smk
    subdomain: smk                    # → smk.ticarethanem.net
    replicas: 2
    image:
      repository_name: smk            # ECR repo name
      tag: latest
    resources:
      cpu: "500m"
      memory: "512Mi"
    ingress:
      enabled: true
      path: /
    database:
      type: mysql                     # mysql or postgresql
      name: smk_db
    autoscaling:
      enabled: true
      minReplicas: 2
      maxReplicas: 10
      targetCPUUtilizationPercentage: 75

  sonsuzenerji:
    enabled: true
    namespace: sonsuzenerji
    subdomain: sonsuz               # → sonsuz.ticarethanem.net
    replicas: 2
    image:
      repository_name: sonsuzenerji
      tag: latest
    resources:
      cpu: "500m"
      memory: "512Mi"
    ingress:
      enabled: true
      path: /
    database:
      type: postgresql
      name: sonsuzenerji_db
    autoscaling:
      enabled: true
      minReplicas: 2
      maxReplicas: 10
      targetCPUUtilizationPercentage: 75

  transferhub:
    enabled: false                    # ← DISABLED (no resources created)
    namespace: transferhub
    subdomain: transfer              # → transfer.ticarethanem.net
    replicas: 2
    image:
      repository_name: transferhub
      tag: latest
    resources:
      cpu: "500m"
      memory: "512Mi"
    ingress:
      enabled: true
      path: /
    database:
      type: mysql
      name: transferhub_db
    autoscaling:
      enabled: true
      minReplicas: 2
      maxReplicas: 10
      targetCPUUtilizationPercentage: 75

  dronesight:
    enabled: false                    # ← DISABLED
    namespace: dronesight
    subdomain: drone                 # → drone.ticarethanem.net
    replicas: 2
    image:
      repository_name: dronesight
      tag: latest
    resources:
      cpu: "500m"
      memory: "512Mi"
    ingress:
      enabled: true
      path: /
    database:
      type: postgresql
      name: dronesight_db
    autoscaling:
      enabled: true
      minReplicas: 2
      maxReplicas: 10
      targetCPUUtilizationPercentage: 75
